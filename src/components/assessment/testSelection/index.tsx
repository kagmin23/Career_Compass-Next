import {
    BarChartOutlined,
    CompassOutlined,
    HeartOutlined,
    StarOutlined,
    ToolOutlined,
    UserOutlined,
} from '@ant-design/icons';
import { Button, Card, Col, Row, Typography } from 'antd';
import React from 'react';
import { useNavigate } from 'react-router-dom';
import { TestType } from '../../../types/assessment/types';

const { Title, Paragraph } = Typography;

const tests: TestType[] = [
  {
    id: 'ikigai',
    title: 'Ikigai Assessment',
    description: 'Kh√°m ph√° s·ª± c√¢n b·∫±ng gi·ªØa ƒëam m√™, s·ª© m·ªánh, ngh·ªÅ nghi·ªáp v√† sinh k·∫ø c·ªßa b·∫°n',
    icon: <CompassOutlined className="text-4xl text-blue-500" />,
    timeEstimate: '15-20 ph√∫t',
    questionsCount: 20,
  },
  {
    id: 'mbti',
    title: 'MBTI Personality Test',
    description: 'X√°c ƒë·ªãnh lo·∫°i t√≠nh c√°ch MBTI v√† c√°c ngh·ªÅ nghi·ªáp ph√π h·ª£p',
    icon: <UserOutlined className="text-4xl text-green-500" />,
    timeEstimate: '25-30 ph√∫t',
    questionsCount: 60,
  },
  {
    id: 'riasec',
    title: 'RIASEC Interest Inventory',
    description: 'ƒê√°nh gi√° s·ªü th√≠ch v√† khuynh h∆∞·ªõng ngh·ªÅ nghi·ªáp c·ªßa b·∫°n',
    icon: <StarOutlined className="text-4xl text-yellow-500" />,
    timeEstimate: '15-20 ph√∫t',
    questionsCount: 30,
  },
  {
    id: 'strengthsfinder',
    title: 'StrengthsFinder',
    description: 'Kh√°m ph√° nh·ªØng ƒëi·ªÉm m·∫°nh ƒë·ªôc ƒë√°o v√† ti·ªÅm nƒÉng c·ªßa b·∫°n',
    icon: <BarChartOutlined className="text-4xl text-purple-500" />,
    timeEstimate: '20-25 ph√∫t',
    questionsCount: 40,
  },
  {
    id: 'via',
    title: 'VIA Character Strengths',
    description: 'T√¨m hi·ªÉu c√°c ƒë·∫∑c ƒëi·ªÉm t√≠nh c√°ch v√† gi√° tr·ªã c·ªët l√µi c·ªßa b·∫°n',
    icon: <HeartOutlined className="text-4xl text-red-500" />,
    timeEstimate: '20-25 ph√∫t',
    questionsCount: 35,
  },
  {
    id: 'skills',
    title: 'Skills Assessment',
    description: 'ƒê√°nh gi√° c√°c k·ªπ nƒÉng v√† nƒÉng l·ª±c hi·ªán t·∫°i c·ªßa b·∫°n',
    icon: <ToolOutlined className="text-4xl text-orange-500" />,
    timeEstimate: '15-20 ph√∫t',
    questionsCount: 25,
  },
];

const TestSelection: React.FC = () => {
  const navigate = useNavigate();

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="text-center mb-12">
        <Title level={2}>B√†i ki·ªÉm tra ƒë√°nh gi√°</Title>
        <Paragraph className="text-lg text-gray-600">
          H√£y th·ª±c hi·ªán c√°c b√†i ki·ªÉm tra d∆∞·ªõi ƒë√¢y ƒë·ªÉ kh√°m ph√° ngh·ªÅ nghi·ªáp ph√π h·ª£p v·ªõi b·∫£n th√¢n
        </Paragraph>
      </div>

      <Row gutter={[24, 24]}>
        {tests.map((test) => (
          <Col xs={24} md={12} lg={8} key={test.id}>
            <Card 
              hoverable 
              className="h-full"
              actions={[
                <Button 
                  type="primary" 
                  onClick={() => navigate(`/assessment/${test.id}`)}
                >
                  B·∫Øt ƒë·∫ßu
                </Button>
              ]}
            >
              <div className="text-center mb-4">
                {test.icon}
              </div>
              <Title level={4} className="text-center mb-3">
                {test.title}
              </Title>
              <Paragraph className="text-gray-600 mb-4">
                {test.description}
              </Paragraph>
              <div className="flex justify-between text-sm text-gray-500">
                <span>‚è± {test.timeEstimate}</span>
                <span>üìù {test.questionsCount} c√¢u h·ªèi</span>
              </div>
            </Card>
          </Col>
        ))}
      </Row>
    </div>
  );
};

export default TestSelection;